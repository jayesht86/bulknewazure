module "nic" {
  source = "git::https://dev.azure.com/msci-otw/tech-iac/_git/terraform-azurerm-msci-network-nic?ref=0.7"

  for_each = { for obj in local.vm_list : obj.name => obj }

  subscription_id = var.subscription_id
  resource_group_object = data.azurerm_resource_group.existing_rg
  tags = local.tags

  nic_default_interface = {
    name                                 = each.value.linux_vm_default_nic.nic_name
    nic_name                               = each.value.linux_vm_default_nic.nic_name #Add this line.
    nic_subnet_id                          = each.value.linux_vm_default_nic.nic_subnet_id
    nic_ip_config_private_ip_allocation    = lookup(each.value.linux_vm_default_nic.nic_ip_config[0], "nic_ip_config_private_ip_allocation", "Dynamic")
    nic_ip_config_private_ip_address        = lookup(each.value.linux_vm_default_nic.nic_ip_config[0], "nic_ip_config_private_ip_address", null)
    nic_ip_config_public_ip_id              = lookup(each.value.linux_vm_default_nic.nic_ip_config[0], "nic_ip_config_public_ip_id", null)
    nic_ip_config_primary                  = lookup(each.value.linux_vm_default_nic.nic_ip_config[0], "nic_ip_config_primary", true)
    nic_ip_config_association_appgw_ids    = lookup(each.value.linux_vm_default_nic.nic_ip_config[0], "nic_ip_config_association_appgw_ids", [])
    ip_config_name                         = lookup(each.value.linux_vm_default_nic.nic_ip_config[0], "nic_ip_config_name", "default_ip_config")
    nic_ip_config = [
      {
        nic_ip_config_private_ip_allocation = lookup(each.value.linux_vm_default_nic.nic_ip_config[0], "nic_ip_config_private_ip_allocation", "Dynamic")
        nic_ip_config_private_ip_address     = lookup(each.value.linux_vm_default_nic.nic_ip_config[0], "nic_ip_config_private_ip_address", null)
        nic_ip_config_public_ip_id           = lookup(each.value.linux_vm_default_nic.nic_ip_config[0], "nic_ip_config_public_ip_id", null)
        nic_ip_config_primary               = lookup(each.value.linux_vm_default_nic.nic_ip_config[0], "nic_ip_config_primary", true)
        nic_ip_config_association_appgw_ids = lookup(each.value.linux_vm_default_nic.nic_ip_config[0], "nic_ip_config_association_appgw_ids", [])
        nic_ip_config_name                  = lookup(each.value.linux_vm_default_nic.nic_ip_config[0], "nic_ip_config_name", "default_ip_config")
      }
    ]
  }

  nic_additional_interface = [
    for nic in each.value.linux_vm_additional_nic : {
      name                                 = nic.nic_name
      nic_subnet_id                          = nic.nic_subnet_id
      nic_ip_config_private_ip_allocation    = lookup(nic.nic_ip_config[0], "nic_ip_config_private_ip_allocation", "Dynamic")
      nic_ip_config_private_ip_address        = lookup(nic.nic_ip_config[0], "nic_ip_config_private_ip_address", null)
      nic_ip_config_public_ip_id              = lookup(nic.nic_ip_config[0], "nic_ip_config_public_ip_id", null)
      nic_ip_config_primary                  = lookup(nic.nic_ip_config[0], "nic_ip_config_primary", false)
      nic_ip_config_association_appgw_ids    = lookup(nic.nic_ip_config[0], "nic_ip_config_association_appgw_ids", [])
      ip_config_name                         = lookup(nic.nic_ip_config[0], "nic_ip_config_name", "additional_ip_config")
      nic_ip_config = [
        {
          nic_ip_config_private_ip_allocation = lookup(nic.nic_ip_config[0], "nic_ip_config_private_ip_allocation", "Dynamic")
          nic_ip_config_private_ip_address     = lookup(nic.nic_ip_config[0], "nic_ip_config_private_ip_address", null)
          nic_ip_config_public_ip_id           = lookup(nic.nic_ip_config[0], "nic_ip_config_public_ip_id", null)
          nic_ip_config_primary               = lookup(nic.nic_ip_config[0], "nic_ip_config_primary", false)
          nic_ip_config_association_appgw_ids = lookup(nic.nic_ip_config[0], "nic_ip_config_association_appgw_ids", [])
          nic_ip_config_name                  = lookup(nic.nic_ip_config[0], "nic_ip_config_name", "additional_ip_config")
        }
      ]
    }
  ]
}
